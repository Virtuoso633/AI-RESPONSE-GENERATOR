

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ai_responses
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck: # Added healthcheck
      test: ["CMD-SHELL", "pg_isready -U postgres -d ai_responses"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/code
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ai_responses
      - GROQ_API_KEY=${GROQ_API_KEY}
    depends_on:
      db: # Modified depends_on
        condition: service_healthy 

  frontend:
    build: ./frontend
    command: streamlit run app.py --server.port=8501 --server.address=0.0.0.0 --server.runOnSave=true
    volumes:
      - ./frontend:/code
    ports:
      - "8501:8501"
    environment:
      - API_URL=http://backend:8000/api
    depends_on:
      backend: # Consider adding a healthcheck to backend too for robust startup
        condition: service_started # Or service_healthy if backend has a healthcheck

volumes:
  postgres_data: